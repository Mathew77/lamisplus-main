{"version":3,"sources":["main/webapp/components/Reports/ReportingPage.js","main/webapp/components/Typography.js","main/webapp/components/Page.js"],"names":["PlotlyRenderers","createPlotlyRenderers","Plot","data","Report","props","_this","Object","C_Users_Dell_Desktop_BACKUP_BACKUP_29072020_Core_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","state","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","components_Page__WEBPACK_IMPORTED_MODULE_11__","className","title","react_pivottable_PivotTableUI__WEBPACK_IMPORTED_MODULE_6___default","assign","onChange","s","setState","renderers","TableRenderers","React","Component","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","type","restProps","objectWithoutProperties","classes","classNames","defineProperty","react_default","defaultProps","bem","bn","create","Page","breadcrumbs","children","b","e","components_Typography","Breadcrumb","BreadcrumbItem","length","map","_ref2","index","name","active","key"],"mappings":"8rBAQA,IAAMA,EAAkBC,IAAsBC,KAGxCC,EAAO,CAAC,CAAC,OAAQ,UAAW,CAAC,MAAO,OAEpCC,0CACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQP,EAFEC,uDAKV,IAAAO,EAAAJ,KACL,OACIK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACAC,UAAU,oBACVC,MAAM,4BAEVL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACI,EAAAL,EAADR,OAAAc,OAAA,CACIlB,KAAMA,EACNmB,SAAU,SAAAC,GAAC,OAAIV,EAAKW,SAASD,IAC7BE,UAAWlB,OAAOc,OAAO,GAAIK,IAAgB1B,IACzCS,KAAKG,gBAjBJe,IAAMC,WAwBZxB,qICjCTyB,EAAS,CACbC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,EAAG,IACHC,KAAM,IACNC,WAAY,cAKRC,EAAa,SAAAC,GAAiD,IAE9DC,EAFqBC,EAAyCF,EAA9CG,IAAU7B,EAAoC0B,EAApC1B,UAAW8B,EAAyBJ,EAAzBI,KAASC,EAAgB1C,OAAA2C,EAAA,EAAA3C,CAAAqC,EAAA,4BAC5DO,EAAUC,IAAW7C,OAAA8C,EAAA,EAAA9C,CAAA,GAAGyC,IAASA,GAAQ9B,GAW/C,OAPE2B,EADEC,KAEQA,GAAOjB,EAAOmB,GACbnB,EAAOmB,GAEP,KAGNM,EAAAvC,EAAAC,cAAC6B,EAADtC,OAAAc,OAAA,GAAc4B,EAAd,CAAyB/B,UAAWiC,MAS7CR,EAAWY,aAAe,CACxBP,KAAM,KAGOL,QCtCTa,EAAMC,IAAGC,OAAO,QAEhBC,EAAO,SAAAf,GAOP,IANJzB,EAMIyB,EANJzB,MACAyC,EAKIhB,EALJgB,YACKd,EAIDF,EAJJG,IACA7B,EAGI0B,EAHJ1B,UACA2C,EAEIjB,EAFJiB,SACGZ,EACC1C,OAAA2C,EAAA,EAAA3C,CAAAqC,EAAA,sDACEO,EAAUK,EAAIM,EAAE,OAAQ,MAAO5C,GAErC,OACEoC,EAAAvC,EAAAC,cAAC8B,EAADvC,OAAAc,OAAA,CAAKH,UAAWiC,GAAaF,GAC3BK,EAAAvC,EAAAC,cAAA,OAAKE,UAAWsC,EAAIO,EAAE,WACnB5C,GAA0B,kBAAVA,EACfmC,EAAAvC,EAAAC,cAACgD,EAAD,CAAYhB,KAAK,KAAK9B,UAAWsC,EAAIO,EAAE,UACpC5C,GAGDA,EAEHyC,GACCN,EAAAvC,EAAAC,cAACiD,EAAA,EAAD,CAAY/C,UAAWsC,EAAIO,EAAE,eAC3BT,EAAAvC,EAAAC,cAACkD,EAAA,EAAD,aACCN,EAAYO,QACXP,EAAYQ,IAAI,SAAAC,EAAmBC,GAAnB,IAAGC,EAAHF,EAAGE,KAAMC,EAATH,EAASG,OAAT,OACdlB,EAAAvC,EAAAC,cAACkD,EAAA,EAAD,CAAgBO,IAAKH,EAAOE,OAAQA,GACjCD,OAMZV,IAkBPF,EAAKJ,aAAe,CAClBR,IAAK,MACL5B,MAAO,IAGMwC","file":"static/js/38.a0f66cc4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\r\nimport 'react-pivottable/pivottable.css';\r\nimport TableRenderers from 'react-pivottable/TableRenderers';\r\nimport Plot from 'react-plotly.js';\r\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\r\nimport Page from 'components/Page';\r\n// create Plotly renderers via dependency injection\r\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\r\n\r\n// see documentation for supported input formats\r\nconst data = [['Male', 'Female'], ['100', '60']];\r\n\r\nclass Report extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = props;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Page\r\n            className=\"DashboardPage p-5\"\r\n            title=\"Report and Visualization\"\r\n          >\r\n        <br/>\r\n            <PivotTableUI\r\n                data={data}\r\n                onChange={s => this.setState(s)}\r\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\r\n                {...this.state}\r\n            />\r\n        </Page>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Report","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nconst tagMap = {\r\n  h1: 'h1',\r\n  h2: 'h2',\r\n  h3: 'h3',\r\n  h4: 'h4',\r\n  h5: 'h5',\r\n  h6: 'h6',\r\n  'display-1': 'h1',\r\n  'display-2': 'h1',\r\n  'display-3': 'h1',\r\n  'display-4': 'h1',\r\n  p: 'p',\r\n  lead: 'p',\r\n  blockquote: 'blockquote',\r\n};\r\n\r\nconst types = Object.keys(tagMap);\r\n\r\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\r\n  const classes = classNames({ [type]: !!type }, className);\r\n  let TypoComp;\r\n\r\n  if (Tag) {\r\n    TypoComp = Tag;\r\n  } else if (!Tag && tagMap[type]) {\r\n    TypoComp = tagMap[type];\r\n  } else {\r\n    TypoComp = 'p';\r\n  }\r\n\r\n  return <TypoComp {...restProps} className={classes} />;\r\n};\r\n\r\nTypography.propTypes = {\r\n  tag: PropTypes.component,\r\n  className: PropTypes.string,\r\n  type: PropTypes.oneOf(types),\r\n};\r\n\r\nTypography.defaultProps = {\r\n  type: 'p',\r\n};\r\n\r\nexport default Typography;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nimport Typography from './Typography';\r\n\r\nconst bem = bn.create('page');\r\n\r\nconst Page = ({\r\n  title,\r\n  breadcrumbs,\r\n  tag: Tag,\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const classes = bem.b('px-5', 'p-5', className);\r\n\r\n  return (\r\n    <Tag className={classes} {...restProps}>\r\n      <div className={bem.e('header')}>\r\n        {title && typeof title === 'string' ? (\r\n          <Typography type=\"h4\" className={bem.e('title')}>\r\n            {title}\r\n          </Typography>\r\n        ) : (\r\n            title\r\n          )}\r\n        {breadcrumbs && (\r\n          <Breadcrumb className={bem.e('breadcrumb')}>\r\n            <BreadcrumbItem>Home</BreadcrumbItem>\r\n            {breadcrumbs.length &&\r\n              breadcrumbs.map(({ name, active }, index) => (\r\n                <BreadcrumbItem key={index} active={active}>\r\n                  {name}\r\n                </BreadcrumbItem>\r\n              ))}\r\n          </Breadcrumb>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  tag: PropTypes.component,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      active: PropTypes.bool,\r\n    })\r\n  ),\r\n};\r\n\r\nPage.defaultProps = {\r\n  tag: 'div',\r\n  title: '',\r\n};\r\n\r\nexport default Page;\r\n"],"sourceRoot":""}