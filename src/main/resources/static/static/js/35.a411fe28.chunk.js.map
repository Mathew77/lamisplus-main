{"version":3,"sources":["main/webapp/actions/formBuilder.js","main/webapp/components/formBuilder/ViewForm.js","main/webapp/api/codes.js","main/webapp/components/Typography.js","main/webapp/components/Page.js","main/webapp/actions/patients.js"],"names":["__webpack_require__","d","__webpack_exports__","fetchService","createForm","updateForm","fetchById","fetchForms","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","_api__WEBPACK_IMPORTED_MODULE_1__","_types__WEBPACK_IMPORTED_MODULE_2__","dispatch","axios","get","concat","url","then","response","console","log","type","FORMTYPES","payload","data","catch","error","post","id","put","programId","useStyles","makeStyles","theme","root2","width","height","overflow","mapActionsToProps","fetchPatientByHospitalNumber","fetchByHospitalNumber","connect","state","arguments","length","undefined","form","forms","patient","patients","services","formReducers","formList","props","myform","_React$useState","React","useState","_React$useState2","Object","C_Users_Dell_Desktop_BACKUP_BACKUP_29072020_Core_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","res","setRes","_React$useState3","_React$useState4","displayType","setDisplayType","_React$useState5","_React$useState6","setprogramId","_React$useState7","_React$useState8","formCode","setformCode","_React$useState9","_React$useState10","form2","setform2","textAreaRef","useRef","useEffect","loadForm","e","JSON","parse","target","value","v","code","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","components_Page__WEBPACK_IMPORTED_MODULE_2__","title","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","react_formio__WEBPACK_IMPORTED_MODULE_3__","errors","ref","submission","hideComponents","onSubmit","fetch","body","stringify","headers","content-type","method","mode","emit","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","md","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","class","reactstrap__WEBPACK_IMPORTED_MODULE_15__","onChange","required","handleProgramChange","map","program","key","name","reactstrap__WEBPACK_IMPORTED_MODULE_16__","color","className","onClick","assign","resourceObject","schema","cols","GENERAL_SERVICE","VITAL_SIGNS_FORM","DRUG_PRESCRIPTION_FORM","LAB_TEST_ORDER_FORM","CONSULTATION_FORM","ADMIT_PATIENT_FORM","DISCHARGE_PATIENT_FORM","TRANSFER_INPATIENT_FORM","CHECK_OUT_PATIENT_FORM","PATIENT_ALLERGY_FORM","APPOINTMENT_FORM","IN_PATIENT_BOOKED","IN_PATIENT_UNBOOKED","OUT_PATIENT_UNBOOKED","LAB_ORDER_STATUS","DRUG_ORDER_STATUS","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","restProps","objectWithoutProperties","classes","classNames","defineProperty","react_default","defaultProps","bem","bn","create","Page","breadcrumbs","children","b","components_Typography","Breadcrumb","BreadcrumbItem","_ref2","index","active","fetchAll","update","Delete","fetchPatientAllergies","fetchPatientLatestVitalSigns","fetchPatientVitalSigns","fetchPatientTestOrders","fetchPatientLatestMedicationOrder","fetchPatientEncounterProgramCodeExclusionList","api_codes__WEBPACK_IMPORTED_MODULE_3__","react_toastify__WEBPACK_IMPORTED_MODULE_4__","onSuccess","onError","baseUrl","ACTION_TYPES","toast","success","apierror","message","delete","CODES","limit","sortField","sortOrder","exclusionList"],"mappings":"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","file":"static/js/35.a411fe28.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nimport {url as baseUrl, url} from '../api'\r\n\r\nimport * as FORMTYPES from './types'\r\n\r\nexport const fetchService = () => dispatch => {\r\n    axios.get(`${url}programs`)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch({\r\n                type: FORMTYPES.FORMTYPES_FETCH_SERVICES,\r\n                payload: response.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            dispatch({\r\n                type: FORMTYPES.FORMTYPES_ERROR,\r\n                payload: 'Something went wrong'\r\n\r\n            })\r\n        })\r\n}\r\n\r\nexport const createForm = (data) => dispatch => {\r\n    console.log(data)\r\n    axios\r\n        .post(`${url}forms/`, data)\r\n        .then(response => {\r\n            dispatch({\r\n                type: FORMTYPES.FORMTYPES_CREATE_FORM,\r\n                payload: response.data\r\n            })\r\n            console.log(response)\r\n        })\r\n        //onSuccess()\r\n        .catch(error => {\r\n            //onError()\r\n            dispatch({\r\n                type: FORMTYPES.FORMTYPES_ERROR,\r\n                payload: 'please try again'\r\n            })\r\n            //onError(error.response)\r\n        })\r\n}\r\n\r\nexport const updateForm = (id, data) => dispatch => {\r\n    axios\r\n        .put(`${url}forms/${id}`, data)\r\n        .then(response => {\r\n            dispatch({\r\n                type: FORMTYPES.FORMTYPES_UPDATE,\r\n                payload: response.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n            dispatch({\r\n                type: FORMTYPES.FORMTYPES_ERROR,\r\n                payload: 'Something went wrong, please try again'\r\n            })\r\n        })\r\n}\r\n\r\n// export const fetchById = (id, onSuccess, onError) => dispatch => {\r\n//     dispatch({\r\n//         type:FORMTYPES.FORMTYPES_FETCH_BY_ID,\r\n//         payload: {}\r\n//     })\r\n//\r\n//     axios\r\n//         .get(`${url}forms/${id}/formCode`)\r\n//         .then(response => {\r\n//             dispatch({\r\n//                 type:FORMTYPES.FORMTYPES_FETCH_BY_ID,\r\n//                 payload: response.data\r\n//             })\r\n//             onSuccess()\r\n//         })\r\n//         .catch(error => {\r\n//             //onError()\r\n//             dispatch({\r\n//                 type: FORMTYPES.FORMTYPES_ERROR,\r\n//                 payload: 'Error loading form, something went wrong. Please try again'\r\n//             })\r\n//    // onError(error.response)\r\n//         })\r\n// }\r\n\r\nexport const fetchById = (programId) => dispatch => {\r\n    axios.get(`${url}programs/${programId}/forms`)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch({\r\n                type: FORMTYPES.FORMTYPES_FETCH_BY_ID,\r\n                payload: response.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            dispatch({\r\n                type: FORMTYPES.FORMTYPES_ERROR,\r\n                payload: 'Something went wrong'\r\n\r\n            })\r\n        })\r\n}\r\nexport const fetchAll = (onSuccess, onError) => dispatch => {\r\n    axios\r\n        .get(`${url}forms`)\r\n        .then(response => {\r\n            dispatch({\r\n                type: FORMTYPES.FORMTYPES_FETCH_ALL,\r\n                payload: response.data\r\n            })\r\n            onSuccess()\r\n        })\r\n        .catch(error => {\r\n            //onError()\r\n            dispatch({\r\n                type:  FORMTYPES.FORMTYPES_ERROR,\r\n                payload: 'Something went wrong, please try again'\r\n            })\r\n\r\n        })\r\n}\r\n\r\nexport const fetchForms = () => dispatch => {\r\n    axios.get(`${url}programs/1/forms`)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch({\r\n                type: FORMTYPES.FORMTYPES_FETCH_ALL,\r\n                payload: response.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            dispatch({\r\n                type: FORMTYPES.FORMTYPES_ERROR,\r\n                payload: 'Something went wrong'\r\n\r\n            })\r\n        })\r\n}","import React, {useRef, useEffect, useState} from 'react';\r\nimport Page from 'components/Page';\r\nimport {  Errors, Form, FormBuilder } from 'react-formio';\r\nimport {Card,CardContent,} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport {url} from '../../api'\r\nimport {fetchService, fetchById, updateForm, fetchForms} from '../../actions/formBuilder'\r\nimport {fetchByHospitalNumber} from '../../actions/patients'\r\n\r\nimport {\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Col,\r\n    Row,\r\n    Button\r\n} from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root2: {\r\n        width: '100%',\r\n        height: 100,\r\n        overflow: 'auto',\r\n    }\r\n}));\r\n\r\nconst Update = props => {\r\n    const [res, setRes] = React.useState(\"\");\r\n    const [displayType, setDisplayType] = React.useState(\"\");\r\n    const [programId, setprogramId] = React.useState(\"\");\r\n    const [formCode, setformCode] = React.useState();\r\n    const [form2, setform2] = React.useState();\r\n    const classes = useStyles();\r\n    let myform;\r\n    const submission = props.patient;\r\n    const textAreaRef = useRef(null);\r\n\r\n    useEffect (() => {\r\n        props.fetchService();\r\n        props.fetchForms();\r\n    }, [])\r\n    useEffect (() => {\r\n         //props.fetchById()\r\n        props.fetchPatientByHospitalNumber('P123189', null, null)\r\n    }, [])\r\n\r\n    const handleProgramChange = (e) => {\r\n        setprogramId(e.target.value)\r\n        props.fetchById(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        props.updateForm(form2.id, form2);\r\n    }\r\n\r\n    const loadForm = (e) => {\r\n        console.log(JSON.parse(e.target.value));\r\n        const v = JSON.parse(e.target.value);\r\n        \r\n        setformCode(v.code);\r\n        \r\n        setform2(v)\r\n        //setRes(form.resourceObject);\r\n    }\r\n    return (\r\n        <Page title=\"Form Renderer\" >\r\n            <Card >\r\n                <CardContent>\r\n                    <h4>View Form</h4>\r\n                    <hr />\r\n                    <Errors errors={props.errors} />\r\n    \r\n                    {!res ? \"\" : \r\n                    <Form\r\n                        form={JSON.parse(res)}\r\n                        ref={form => myform = form}\r\n                        submission={{data : {patient: props.patient}}}\r\n                        //src={url}\r\n                        hideComponents={props.hideComponents}\r\n                        //onSubmit={props.onSubmit}\r\n                        onSubmit={(submission) => {\r\n                            console.log(submission);\r\n                            return fetch('https://lp-base-app.herokuapp.com/api/', {\r\n                                body: JSON.stringify(submission),\r\n                                headers: {\r\n                                    'content-type': 'application/json'\r\n                                },\r\n                                method: 'POST',\r\n                                mode: 'cors',\r\n                            }).then(res => {\r\n                                console.log(res);\r\n                                myform.emit('submitDone', submission);\r\n                            })}}\r\n                    />\r\n                        }\r\n                    <br></br>\r\n                </CardContent>\r\n            </Card>\r\n            <hr></hr>\r\n            <Card >\r\n                <CardContent>\r\n                    <h4>Edit Form</h4>\r\n                    <Row>\r\n                        <Col md={4}> <FormGroup>\r\n                            <Label class=\"sr-only\">Display Type</Label>\r\n                            <Input type=\"select\"  id=\"displayType\" value={displayType} onChange={e => setDisplayType(e.target.value)}>\r\n                                <option value=\"form\">Form</option>\r\n                                <option value=\"wizard\">Wizard</option></Input>\r\n                        </FormGroup></Col>\r\n\r\n                        <Col md={4}> <FormGroup>\r\n                            <Label class=\"sr-only\">Program Area</Label>\r\n                            {props.services.length && props.services.length > 0 ?\r\n                                <Input type=\"select\" class=\"form-control\" id=\"programId\" required value={programId}  onChange={e => handleProgramChange(e) }>\r\n                                    {props.services.map(program => (<option key={program.id} value={program.id} >{program.name}</option>))}\r\n                                </Input>:  <Input type=\"select\" class=\"form-control\" id=\"programId\" required value={programId} onChange={e => setprogramId(e.target.value)}>\r\n                                    <option>No program found</option>\r\n                                </Input>}\r\n                        </FormGroup></Col>\r\n\r\n                        <Col md={4}> <FormGroup>\r\n                            <Label class=\"sr-only\">Form Name</Label>\r\n                            {props.formList.length && props.formList.length > 0 ?\r\n                                <Input type=\"select\" class=\"form-control\" id=\"formCode\" required value={formCode}  onChange={e => loadForm(e) }>\r\n                                    <option value=\"\">Select One</option>\r\n                                    {props.formList.map(form => (<option value={JSON.stringify(form)}>{form.name}</option>))}\r\n                                </Input>:  <Input type=\"select\" class=\"form-control\" id=\"formCode\" required value={formCode} onChange={e => setformCode(e.target.value)}>\r\n                                </Input>}\r\n                        </FormGroup></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={2}> <FormGroup>\r\n                            <label class=\"sr-only\"></label>\r\n                            <Button color=\"primary\" className=\" mt-4\" onClick={() => loadForm()}>Load Form</Button>\r\n                        </FormGroup></Col>\r\n\r\n                        <Col md={2}> <FormGroup>\r\n                            <label class=\"sr-only\"></label>\r\n                            <button type=\"button\"  class=\"form-control btn btn-primary mt-4\" onClick={() => handleSubmit()}>Update Form</button>\r\n                        </FormGroup></Col>\r\n                    </Row>\r\n                    { form2 ? \r\n                    <FormBuilder form={form2.resourceObject} {...props} onChange={(schema) => {\r\n                       // console.log(JSON.stringify(schema));\r\n                        setRes(JSON.stringify(schema));\r\n                    }} />\r\n: \"\"\r\n                }\r\n                    <br></br>\r\n                </CardContent>\r\n            </Card>\r\n            <hr></hr>\r\n            <Card >\r\n                <CardContent>\r\n                    <h4>Json Form</h4>\r\n                    <div >\r\n                    <textarea cols=\"100\"\r\n                              ref={textAreaRef}\r\n                              value={res}/>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Page>\r\n    );\r\n}\r\n\r\nconst mapStateToProps =  (state = { form:{}}) => {\r\n    console.log(state.forms)\r\n    return {\r\n        patient: state.patients.patient,\r\n        services: state.formReducers.services,\r\n        formList: state.formReducers.form,\r\n    }}\r\n\r\nconst mapActionsToProps = ({\r\n    fetchService: fetchService,\r\n    fetchById: fetchById,\r\n    updateForm: updateForm,\r\n    fetchPatientByHospitalNumber: fetchByHospitalNumber,\r\n    fetchForms:fetchForms\r\n})\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Update)\r\n\r\n//\r\n","/**\r\n * @CODES\r\n * ==============================================\r\n * PROGRAM CODES\r\n */\r\n\r\nexport const GENERAL_SERVICE = '25216afc-d158-4696-ada6-00df609b9a4c'\r\n\r\n\r\n/**\r\n * @CODES\r\n * ==============================================\r\n * FORM CODES\r\n */\r\n\r\nexport const VITAL_SIGNS_FORM = 'bc5d44b8-8ed1-4de0-85de-c3c6f2c91cd0'\r\nexport const DRUG_PRESCRIPTION_FORM = '4ab293ff-6837-41e8-aa85-14f25ce59ef0'\r\nexport const LAB_TEST_ORDER_FORM = '87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e'\r\nexport const CHECK_IN_FORM = '7f38c3e4-f765-4a9f-9a12-cbc1d26d9864'\r\nexport const CONSULTATION_FORM = 'd157d4e2-4031-499d-b32b-7562208a10cf'\r\nexport const ADMIT_PATIENT_FORM = 'f47b2db9-cf1b-4972-8c22-3f353b5fa222'\r\nexport const DISCHARGE_PATIENT_FORM = '8e07eb78-0449-42bd-bd21-9ef9b489ad7d'\r\nexport const TRANSFER_INPATIENT_FORM = '4c0db2ee-7916-4ea6-b24d-42234c8ac0a7'\r\nexport const CHECK_OUT_PATIENT_FORM = 'ec84dd9a-9493-4b73-b501-6201a06982a6'\r\nexport const PATIENT_ALLERGY_FORM = '796f2a0f-1e76-42af-a24a-e6f09dfedbe7'\r\nexport const APPOINTMENT_FORM = '22ec08bd-eeae-4f5e-9041-44461d511e90'\r\n\r\n/**\r\n * @CODES\r\n * ==============================================\r\n * TYPE PATIENT CODES\r\n */\r\nexport const IN_PATIENT_BOOKED = 3\r\nexport const IN_PATIENT_UNBOOKED = 2\r\nexport const OUT_PATIENT_BOOKED = 1\r\nexport const OUT_PATIENT_UNBOOKED = '0'\r\nexport const EMERGENCY_PATIENT = 4\r\n\r\n/**\r\n * @CODES\r\n * ==============================================\r\n * LAB ORDER STATUS CODES\r\n */\r\nexport const LAB_ORDER_STATUS = [{name:\"Sample Collected\", id: 1},\r\n{name:\"Sample Transfer\", id: 2},\r\n{name:\"Sample Verified\", id: 3},\r\n{name:\"Sample Rejected\", id: 4},\r\n{name:\"Result Available\", id: 5},\r\n{name:\"Pending\", id:0}];\r\n\r\n\r\nexport const DRUG_ORDER_STATUS = [{name:\"Not Dispensed\", id: 0},\r\n{name:\"Dispensed\", id: 1}];\r\n\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nconst tagMap = {\r\n  h1: 'h1',\r\n  h2: 'h2',\r\n  h3: 'h3',\r\n  h4: 'h4',\r\n  h5: 'h5',\r\n  h6: 'h6',\r\n  'display-1': 'h1',\r\n  'display-2': 'h1',\r\n  'display-3': 'h1',\r\n  'display-4': 'h1',\r\n  p: 'p',\r\n  lead: 'p',\r\n  blockquote: 'blockquote',\r\n};\r\n\r\nconst types = Object.keys(tagMap);\r\n\r\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\r\n  const classes = classNames({ [type]: !!type }, className);\r\n  let TypoComp;\r\n\r\n  if (Tag) {\r\n    TypoComp = Tag;\r\n  } else if (!Tag && tagMap[type]) {\r\n    TypoComp = tagMap[type];\r\n  } else {\r\n    TypoComp = 'p';\r\n  }\r\n\r\n  return <TypoComp {...restProps} className={classes} />;\r\n};\r\n\r\nTypography.propTypes = {\r\n  tag: PropTypes.component,\r\n  className: PropTypes.string,\r\n  type: PropTypes.oneOf(types),\r\n};\r\n\r\nTypography.defaultProps = {\r\n  type: 'p',\r\n};\r\n\r\nexport default Typography;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nimport Typography from './Typography';\r\n\r\nconst bem = bn.create('page');\r\n\r\nconst Page = ({\r\n  title,\r\n  breadcrumbs,\r\n  tag: Tag,\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const classes = bem.b('px-5', 'p-5', className);\r\n\r\n  return (\r\n    <Tag className={classes} {...restProps}>\r\n      <div className={bem.e('header')}>\r\n        {title && typeof title === 'string' ? (\r\n          <Typography type=\"h4\" className={bem.e('title')}>\r\n            {title}\r\n          </Typography>\r\n        ) : (\r\n            title\r\n          )}\r\n        {breadcrumbs && (\r\n          <Breadcrumb className={bem.e('breadcrumb')}>\r\n            <BreadcrumbItem>Home</BreadcrumbItem>\r\n            {breadcrumbs.length &&\r\n              breadcrumbs.map(({ name, active }, index) => (\r\n                <BreadcrumbItem key={index} active={active}>\r\n                  {name}\r\n                </BreadcrumbItem>\r\n              ))}\r\n          </Breadcrumb>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  tag: PropTypes.component,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      active: PropTypes.bool,\r\n    })\r\n  ),\r\n};\r\n\r\nPage.defaultProps = {\r\n  tag: 'div',\r\n  title: '',\r\n};\r\n\r\nexport default Page;\r\n","import axios from \"axios\";\r\nimport { url as baseUrl } from \"../api\";\r\nimport * as ACTION_TYPES from \"./types\";\r\nimport * as CODES from \"api/codes\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n/**\r\n * @Actions\r\n * CheckIn CRUD OPERATIONS\r\n * returns API response from server\r\n * =================================\r\n * fetchAll()\r\n * fetchById()\r\n * create()\r\n * update()\r\n * Delete()\r\n * fetchPatientVitals()\r\n * fetchPatientAllergies()\r\n * fetchPatientLatestVitalSigns()\r\n * fetchCountries()\r\n * @method GET => fetchPatientTestOrders()  get all patient's lab order encounter: params {patientId}{formName} || query {null}\r\n * @method GET => fetchPatientEncounters() get all patient's encounter: params{patientId, onSuccess, onError} || query{null}\r\n * @method GET => fetchPatientEncounterProgramCodeExclusionList() get all patient's encounter that is not general service: params{patientId, onSuccess, onError} || query{null}\r\n */\r\nexport const fetchAll = (onSuccess, onError) => dispatch => {\r\n  axios\r\n    .get(`${baseUrl}patients/`)\r\n    .then(response => {\r\n      console.log(response.data);\r\n      if(onSuccess){\r\n        onSuccess();\r\n      }\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_FETCH_ALL,\r\n        payload: response.data\r\n      });\r\n      onSuccess();\r\n    })\r\n\r\n    .catch(error => {\r\n      if(onError){\r\n        onError();\r\n      }\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_ERROR,\r\n        payload: \"Something went wrong, please try again\"\r\n      })\r\n      onError();\r\n    }\r\n    \r\n    );\r\n};\r\n\r\nexport const fetchById = (id, onSuccess, onError) => dispatch => {\r\n  if(id){\r\n  axios\r\n    .get(`${baseUrl}patients/${id}`)\r\n    .then(response => {\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_FETCH_BY_ID,\r\n        payload: response.data\r\n      });\r\n      onSuccess && onSuccess();\r\n    })\r\n    .catch(error =>\r\n      {\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_ERROR,\r\n        payload: error\r\n      })\r\n      onError && onError();\r\n    } \r\n    );\r\n    } \r\n};\r\n\r\n\r\nexport const create = (data,onSuccess, onError) => dispatch => {\r\n  console.log(data);\r\n  axios\r\n    .post(`${baseUrl}patients/`, data)\r\n    .then(response => {\r\n\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_CREATE,\r\n        payload: response.data\r\n      });\r\n      onSuccess && onSuccess();\r\n      toast.success(\"Patient Register Save Successfully!\");\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_ERROR,\r\n        payload: \"Something went wrong\"\r\n      });\r\n      onError()\r\n      if(error.response.data.apierror.message===null || error.response.data.apierror.message===\"\"){\r\n        toast.error(\"Something went wrong\");\r\n      }else{\r\n        toast.error(error.response.data.apierror.message);\r\n      }\r\n       \r\n       //console.log(error.response.data.apierror.message);\r\n    });\r\n};\r\n\r\nexport const update = (data, id, onSuccess, onError) => dispatch => {\r\n\r\n  console.log(`${baseUrl}patients/${id}`);\r\n    axios\r\n    .put(`${baseUrl}patients/${id}`, data)\r\n    .then(response => {\r\n\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_UPDATE,\r\n        payload: response.data\r\n      });\r\n      onSuccess()\r\n      toast.success(\"Patient record was updated successfully!\");\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_ERROR,\r\n        payload:error.response.data\r\n      });\r\n      console.log(error.response.data)\r\n      onError()\r\n      if(error.response.data.apierror.message===null || error.response.data.apierror.message===\"\"){\r\n        toast.error(\"Something went wrong\");\r\n      }else{\r\n        toast.error(error.response.data.apierror.message);\r\n      }\r\n     //console.log(error.response.data.apierror.message);\r\n    });\r\n\r\n\r\n};\r\n\r\nexport const Delete = (id) => dispatch => {\r\n  console.log(`${baseUrl}patients/${id}`);\r\n  axios\r\n  .delete(`${baseUrl}patients/${id}`)\r\n  .then(response => {\r\n\r\n    dispatch({\r\n      type: ACTION_TYPES.PATIENT_DELETE,\r\n      payload: id\r\n    });\r\n    \r\n    toast.success(\"Patient record was deleted successfully!\");\r\n  })\r\n  .catch(error => {\r\n    dispatch({\r\n      type: ACTION_TYPES.PATIENTS_ERROR,\r\n      payload:error.response.data\r\n    });\r\n    //console.log(error.response.data)\r\n    \r\n    if(error.response.data.apierror.message===null || error.response.data.apierror.message===\"\"){\r\n      toast.error(\"Something went wrong\");\r\n    }else{\r\n      toast.error(error.response.data.apierror.message);\r\n    }\r\n   //console.log(error.response.data.apierror.message);\r\n  });\r\n};\r\n\r\n\r\nexport const fetchPatientAllergies = (id, onSuccess, onError) => dispatch => {\r\n  axios\r\n    .get(`${baseUrl}patients/${id}/encounters/${CODES.PATIENT_ALLERGY_FORM}/`)\r\n    .then(response => {\r\n      if(onSuccess){\r\n        onSuccess();\r\n      }\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENT_ALLERGIES,\r\n        payload: response.data\r\n      })\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_ERROR,\r\n        payload: 'Something went wrong, please try again'\r\n      })\r\n      if(onError){\r\n        onError();\r\n      }\r\n    }\r\n    )\r\n   \r\n}\r\n\r\n\r\nexport const fetchPatientLatestVitalSigns = (id, onSuccess, onError) => dispatch => {\r\n  axios\r\n    .get(`${baseUrl}patients/${id}/encounters/${CODES.VITAL_SIGNS_FORM}`, {limit: 1, sortField: \"dateEncounter\", sortOrder: \"desc\"} )\r\n    .then(response => {\r\n      if(onSuccess){\r\n        onSuccess();\r\n      }\r\n      if(response.data.length > 0){\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENT_LATEST_VITAL_SIGNS,\r\n        payload: response.data[0]\r\n      })\r\n    }\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_ERROR,\r\n        payload: 'Something went wrong, please try again'\r\n      })\r\n      if(onError){\r\n        onError();\r\n      }\r\n    }\r\n    )\r\n}\r\n\r\n\r\nexport const fetchPatientVitalSigns = (id, onSuccess, onError) => dispatch => {\r\n  if(id){\r\n   axios\r\n     .get(`${baseUrl}patients/${id}/encounters/${CODES.VITAL_SIGNS_FORM}`)\r\n     .then(response => {\r\n       dispatch({\r\n         type: ACTION_TYPES.PATIENT_VITAL_SIGNS,\r\n         payload: response.data\r\n       })\r\n       onSuccess && onSuccess() ;\r\n     })\r\n     .catch(error => {\r\n       dispatch({\r\n         type: ACTION_TYPES.PATIENTS_ERROR,\r\n         payload: 'Something went wrong, please try again'\r\n       })\r\n       onError && onError();\r\n      }\r\n     )\r\n     }  \r\n }\r\n\r\n\r\n export const fetchPatientTestOrders = (id, onSuccess, onError) => dispatch => {\r\n  if(id){\r\n   axios\r\n     .get(`${baseUrl}patients/${id}/encounters/${CODES.LAB_TEST_ORDER_FORM}`, {limit: 5, sortField: \"dateEncounter\", sortOrder: \"desc\"})\r\n     .then(response => {\r\n       dispatch({\r\n         type: ACTION_TYPES.PATIENT_LAB_ORDERS,\r\n         payload: response.data\r\n       })\r\n       if(onSuccess){\r\n       onSuccess()\r\n       }\r\n     })\r\n     .catch(error => {\r\n       dispatch({\r\n         type: ACTION_TYPES.PATIENTS_ERROR,\r\n         payload: 'Something went wrong, please try again'\r\n       })\r\n       if(onError){\r\n       onError()\r\n       }\r\n      }\r\n     )\r\n     }  \r\n }\r\n export const fetchPatientLatestMedicationOrder = (id, onSuccess, onError) => dispatch => {\r\n  if(id){\r\n   axios\r\n     .get(`${baseUrl}patients/${id}/encounters/${CODES.DRUG_PRESCRIPTION_FORM}`, {limit: 5, sortField: \"dateEncounter\", sortOrder: \"desc\"} )\r\n     .then(response => {\r\n      onSuccess && onSuccess() ;\r\n       dispatch({\r\n         type: ACTION_TYPES.PATIENT_LATEST_MEDICATION_LIST,\r\n         payload: response.data\r\n       })\r\n     })\r\n     .catch(error => {\r\n      onError && onError();\r\n       dispatch({\r\n         type: ACTION_TYPES.PATIENTS_ERROR,\r\n         payload: 'Something went wrong, please try again'\r\n       })\r\n       \r\n      }\r\n     )\r\n     }  \r\n }\r\n\r\n export const fetchByHospitalNumber = (id, onSuccess, onError) => dispatch => {\r\n  axios\r\n    .get(`${baseUrl}patients/${id}`)\r\n    .then(response => {\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_FETCH_BY_ID,\r\n        payload: response.data\r\n      });\r\n      if(onSuccess){\r\n      onSuccess();\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_ERROR,\r\n        payload: \"Something went wrong, please try again\"\r\n      })\r\n      if(onError){\r\n      onError();\r\n      }\r\n    }\r\n    );\r\n};\r\n \r\nexport const fetchPatientEncounterProgramCodeExclusionList = (id, onSuccess, onError) => dispatch => {\r\n  if(id){\r\n    const exclusionList = [CODES.GENERAL_SERVICE];\r\n   axios\r\n     .get(`${baseUrl}patients/${id}/encounters/programCodeExclusionList?programCodeExclusionList=${exclusionList}` )\r\n     .then(response => {\r\n       dispatch({\r\n         type: ACTION_TYPES.PATIENT_EXCLUSIVE_ENCOUNTER_LIST,\r\n         payload: response.data\r\n       })\r\n       onSuccess && onSuccess() ;\r\n     })\r\n     .catch(error => {\r\n       dispatch({\r\n         type: ACTION_TYPES.PATIENTS_ERROR,\r\n         payload: 'Something went wrong, please try again'\r\n       })\r\n       onError && onError() ;\r\n      }\r\n     )\r\n     }  \r\n }\r\n\r\nexport const fetchCountries = () => dispatch => {\r\n  axios(`${baseUrl}countries`)\r\n    .then(response => {\r\n      dispatch({\r\n        type: ACTION_TYPES.FETCH_COUNTRIES,\r\n        payload: response.data\r\n      })\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_ERROR,\r\n        payload: 'Something went wrong, please try again'\r\n    })\r\n  })\r\n }\r\n\r\n export const fetchPatientEncounterByFormCode = (id, formCode, onSuccess, onError) => dispatch => {\r\n   axios\r\n     .get(`${baseUrl}patients/${id}/encounters/${formCode}`)\r\n     .then(response => {\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENT_ENCOUNTER_LIST,\r\n        payload: response.data\r\n      })\r\n      if(onSuccess){\r\n      onSuccess()\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_ERROR,\r\n        payload: 'Something went wrong, please try again'\r\n      })\r\n      if(onError){\r\n      onError()\r\n      }\r\n     }\r\n    )\r\n }\r\n\r\n \r\nexport const fetchCheckedInPatients = (onSuccess, onError) => dispatch => {\r\n  axios\r\n    .get(`${baseUrl}visits/`)\r\n    .then(response => {\r\n      if(onSuccess){\r\n        onSuccess();\r\n      }\r\n      dispatch({\r\n        type: ACTION_TYPES.CHECKEDIN_PATIENT_FETCH_ALL,\r\n        payload: response.data\r\n      });\r\n    })\r\n    .catch(error => {\r\n      if(onError){\r\n        onError();\r\n      }\r\n      dispatch({\r\n        type: ACTION_TYPES.PATIENTS_ERROR,\r\n        payload: \"Something went wrong, please try again\"\r\n      })\r\n    }\r\n    );\r\n};"],"sourceRoot":""}